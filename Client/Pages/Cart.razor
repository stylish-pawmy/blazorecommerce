@page "/cart"
@inject ICartService CartService

@if (cartProducts == null || cartProducts.Count == 0)
{
    <span>@message</span>
}
else {
    <div>
        @foreach (var product in cartProducts)
        {
            <div class="container">
                <div class="image-wrapper">
                    <img src="@product.ImageUrl" class="image" />
                </div>
                <div class="name">
                    <h5><a href="/product/@product.ProductId">@product.Title</a></h5>
                    <span>@product.ProductType</span>
                </div>
                <div class="cart-product-price">@product.Price</div>
            </div>
        }
        <div class="cart-product-price">
            Total @cartProducts.Count: DZD @cartProducts.Sum(product => product.Price)
        </div>
    </div>
}

@code 
{
    List<CartProductResponse>? cartProducts { get; set; } = null;
    string message = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        if ((await CartService.GetCartItems()).Count == 0)
        {
            message = "Loading products ...";
            cartProducts = new List<CartProductResponse>();
        }
        else {
            cartProducts = (await CartService.GetCartProducts()).Data;
        }
    }
}