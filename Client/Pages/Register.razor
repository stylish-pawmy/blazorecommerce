@page "/register"
@inject IAuthService AuthService

<EditForm Model="user" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control" />
        <ValidationMessage For=@(() => user.Email) />
    </div>
    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password" />
        <ValidationMessage For=@(() => user.Password) />
    </div>
    <div class="mb-3">
        <label for="confirm-password">Confirm Password</label>
        <InputText id="confirm-password" @bind-Value="user.ConfirmPassword" class="form-control" type="password" />
        <ValidationMessage For=@(() => user.ConfirmPassword) />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
    <div>
        <span class="@messageCssClass">@message</span>
    </div>
</EditForm>

@code {
    UserRegister user = new UserRegister();
    string message = string.Empty;
    string messageCssClass = string.Empty;
    private async Task HandleRegister()
    {
        var response = await AuthService.Register(user);
        
        message = response.Message;
        if (response.Success)
            messageCssClass = "text-success";
        else
            messageCssClass = "text-danger";
    }
}